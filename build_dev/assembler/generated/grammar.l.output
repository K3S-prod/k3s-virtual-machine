Terminals unused in grammar

    SPACE


State 0 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration
    2        | program declaration
    3        | ε

    4 declaration: function
    5            | num

    6 $@1: ε

    7 function: FUNCTION_KEYW IDENTIFIER $@1 B_BEGIN instructions B_END

    8 $@2: ε

    9 num: NUM_KEYW IDENTIFIER $@2 NUM

   10 instructions: instruction_or_label instructions
   11             | instruction_or_label

   12 IMM: IDENTIFIER
   13    | IMM_LITERAL

   14 instruction_or_label: instruction
   15                     | label

   16 $@3: ε

   17 label: IDENTIFIER $@3 COLON

   18 instruction: OPC_R4_R4 REG REG
   19            | OPC_R8 REG
   20            | OPC_I8 IMM
   21            | OPC


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    REG (258) 18 19
    NUM (259) 9
    IMM_LITERAL (260) 13
    SPACE (261)
    FUNCTION_KEYW (262) 7
    NUM_KEYW (263) 9
    IDENTIFIER (264) 7 9 12 17
    B_BEGIN (265) 7
    COLON (266) 17
    B_END (267) 7
    OPC_R4_R4 (268) 18
    OPC_R8 (269) 19
    OPC_I8 (270) 20
    OPC (271) 21


Nonterminals, with rules where they appear

    $accept (17)
        on left: 0
    program (18)
        on left: 1 2 3
        on right: 0 2
    declaration (19)
        on left: 4 5
        on right: 1 2
    function (20)
        on left: 7
        on right: 4
    $@1 (21)
        on left: 6
        on right: 7
    num (22)
        on left: 9
        on right: 5
    $@2 (23)
        on left: 8
        on right: 9
    instructions (24)
        on left: 10 11
        on right: 7 10
    IMM (25)
        on left: 12 13
        on right: 20
    instruction_or_label (26)
        on left: 14 15
        on right: 10 11
    label (27)
        on left: 17
        on right: 15
    $@3 (28)
        on left: 16
        on right: 17
    instruction (29)
        on left: 18 19 20 21
        on right: 14


State 0

    0 $accept: • program $end

    FUNCTION_KEYW  shift, and go to state 1
    NUM_KEYW       shift, and go to state 2

    FUNCTION_KEYW  [reduce using rule 3 (program)]
    NUM_KEYW       [reduce using rule 3 (program)]
    $default       reduce using rule 3 (program)

    program      go to state 3
    declaration  go to state 4
    function     go to state 5
    num          go to state 6


State 1

    7 function: FUNCTION_KEYW • IDENTIFIER $@1 B_BEGIN instructions B_END

    IDENTIFIER  shift, and go to state 7


State 2

    9 num: NUM_KEYW • IDENTIFIER $@2 NUM

    IDENTIFIER  shift, and go to state 8


State 3

    0 $accept: program • $end
    2 program: program • declaration

    $end           shift, and go to state 9
    FUNCTION_KEYW  shift, and go to state 1
    NUM_KEYW       shift, and go to state 2

    declaration  go to state 10
    function     go to state 5
    num          go to state 6


State 4

    1 program: declaration •

    $default  reduce using rule 1 (program)


State 5

    4 declaration: function •

    $default  reduce using rule 4 (declaration)


State 6

    5 declaration: num •

    $default  reduce using rule 5 (declaration)


State 7

    7 function: FUNCTION_KEYW IDENTIFIER • $@1 B_BEGIN instructions B_END

    $default  reduce using rule 6 ($@1)

    $@1  go to state 11


State 8

    9 num: NUM_KEYW IDENTIFIER • $@2 NUM

    $default  reduce using rule 8 ($@2)

    $@2  go to state 12


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 program: program declaration •

    $default  reduce using rule 2 (program)


State 11

    7 function: FUNCTION_KEYW IDENTIFIER $@1 • B_BEGIN instructions B_END

    B_BEGIN  shift, and go to state 13


State 12

    9 num: NUM_KEYW IDENTIFIER $@2 • NUM

    NUM  shift, and go to state 14


State 13

    7 function: FUNCTION_KEYW IDENTIFIER $@1 B_BEGIN • instructions B_END

    IDENTIFIER  shift, and go to state 15
    OPC_R4_R4   shift, and go to state 16
    OPC_R8      shift, and go to state 17
    OPC_I8      shift, and go to state 18
    OPC         shift, and go to state 19

    instructions          go to state 20
    instruction_or_label  go to state 21
    label                 go to state 22
    instruction           go to state 23


State 14

    9 num: NUM_KEYW IDENTIFIER $@2 NUM •

    $default  reduce using rule 9 (num)


State 15

   17 label: IDENTIFIER • $@3 COLON

    $default  reduce using rule 16 ($@3)

    $@3  go to state 24


State 16

   18 instruction: OPC_R4_R4 • REG REG

    REG  shift, and go to state 25


State 17

   19 instruction: OPC_R8 • REG

    REG  shift, and go to state 26


State 18

   20 instruction: OPC_I8 • IMM

    IMM_LITERAL  shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    IMM  go to state 29


State 19

   21 instruction: OPC •

    $default  reduce using rule 21 (instruction)


State 20

    7 function: FUNCTION_KEYW IDENTIFIER $@1 B_BEGIN instructions • B_END

    B_END  shift, and go to state 30


State 21

   10 instructions: instruction_or_label • instructions
   11             | instruction_or_label •

    IDENTIFIER  shift, and go to state 15
    OPC_R4_R4   shift, and go to state 16
    OPC_R8      shift, and go to state 17
    OPC_I8      shift, and go to state 18
    OPC         shift, and go to state 19

    $default  reduce using rule 11 (instructions)

    instructions          go to state 31
    instruction_or_label  go to state 21
    label                 go to state 22
    instruction           go to state 23


State 22

   15 instruction_or_label: label •

    $default  reduce using rule 15 (instruction_or_label)


State 23

   14 instruction_or_label: instruction •

    $default  reduce using rule 14 (instruction_or_label)


State 24

   17 label: IDENTIFIER $@3 • COLON

    COLON  shift, and go to state 32


State 25

   18 instruction: OPC_R4_R4 REG • REG

    REG  shift, and go to state 33


State 26

   19 instruction: OPC_R8 REG •

    $default  reduce using rule 19 (instruction)


State 27

   13 IMM: IMM_LITERAL •

    $default  reduce using rule 13 (IMM)


State 28

   12 IMM: IDENTIFIER •

    $default  reduce using rule 12 (IMM)


State 29

   20 instruction: OPC_I8 IMM •

    $default  reduce using rule 20 (instruction)


State 30

    7 function: FUNCTION_KEYW IDENTIFIER $@1 B_BEGIN instructions B_END •

    $default  reduce using rule 7 (function)


State 31

   10 instructions: instruction_or_label instructions •

    $default  reduce using rule 10 (instructions)


State 32

   17 label: IDENTIFIER $@3 COLON •

    $default  reduce using rule 17 (label)


State 33

   18 instruction: OPC_R4_R4 REG REG •

    $default  reduce using rule 18 (instruction)
