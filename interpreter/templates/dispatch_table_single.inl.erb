#define FETCH_AND_DISPATCH() \
{                                                                   \
    auto &inst = k3s::Runtime::GetInterpreter()->Fetch();                                           \
    size_t dispatch_idx = k3s::Runtime::GetInterpreter()->Decoder()->DecodeAndResolve(inst, *k3s::Runtime::GetInterpreter());   \
    ASSERT(DISPATCH_TABLE[dispatch_idx] != nullptr);                \
    goto *DISPATCH_TABLE[dispatch_idx];                             \
}

static constexpr std::array<const void*, <%= ISA.GetDispatchTable().length %>> DISPATCH_TABLE = {
<% ISA.GetDispatchTable().each do |lbl| %>
<% if lbl != "nullptr" %>
    <%= "&&" + lbl + "__LBL,\n"  %>
<% else %>
    <%= lbl + ",\n"  %>
<% end %>

<% end %>
};

// Begin execution:
FETCH_AND_DISPATCH();

<% ISA.GetDispatchTable().each do |lbl| %>
    <% if lbl != "nullptr" %>
    <%= lbl + "__LBL: {" %>
        <%= "k3s::Runtime::GetInterpreter()->" + lbl + "();" %>
        goto DONE;
    <%= "}" %>
    <% end %>
<% end %>
DONE:
#undef FETCH_AND_DISPATCH
